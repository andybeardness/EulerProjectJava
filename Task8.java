package com.company;

import java.time.Duration;
import java.time.Instant;

public class Task8 {
    /**
     * Задача 8
     * Наибольшее произведение в последовательности
     *
     * Наибольшее произведение четырех последовательных
     * цифр в нижеприведенном 1000-значном числе равно
     * 9 × 9 × 8 × 9 = 5832.
     *
     * 73167176531330624919225119674426574742355349194934
     * 96983520312774506326239578318016984801869478851843
     * 85861560789112949495459501737958331952853208805511
     * 12540698747158523863050715693290963295227443043557
     * 66896648950445244523161731856403098711121722383113
     * 62229893423380308135336276614282806444486645238749
     * 30358907296290491560440772390713810515859307960866
     * 70172427121883998797908792274921901699720888093776
     * 65727333001053367881220235421809751254540594752243
     * 52584907711670556013604839586446706324415722155397
     * 53697817977846174064955149290862569321978468622482
     * 83972241375657056057490261407972968652414535100474
     * 82166370484403199890008895243450658541227588666881
     * 16427171479924442928230863465674813919123162824586
     * 17866458359124566529476545682848912883142607690042
     * 24219022671055626321111109370544217506941658960408
     * 07198403850962455444362981230987879927244284909188
     * 84580156166097919133875499200524063689912560717606
     * 05886116467109405077541002256983155200055935729725
     * 71636269561882670428252483600823257530420752963450
     *
     * Найдите наибольшее произведение тринадцати последовательных цифр в данном числе.
     *
     * >> RESULT    -- 23514624000
     * >> SLICE     -- 3042075296345
     * >> TIME (MS) -- 3
     */
    public static void main(String[] args) {
        Instant t1, t2;
        long TIME;

        t1 = Instant.now();

        int   lenNum = 13;

        int[] intArray  = new int[lenNum];
        long  mulResult;

        int[] intArrayMax  = new int[lenNum];
        long  mulResultMax = 1;

        String bigNum = "73167176531330624919225119674426574742355349194934" +
                        "96983520312774506326239578318016984801869478851843" +
                        "85861560789112949495459501737958331952853208805511" +
                        "12540698747158523863050715693290963295227443043557" +
                        "66896648950445244523161731856403098711121722383113" +
                        "62229893423380308135336276614282806444486645238749" +
                        "30358907296290491560440772390713810515859307960866" +
                        "70172427121883998797908792274921901699720888093776" +
                        "65727333001053367881220235421809751254540594752243" +
                        "52584907711670556013604839586446706324415722155397" +
                        "53697817977846174064955149290862569321978468622482" +
                        "83972241375657056057490261407972968652414535100474" +
                        "82166370484403199890008895243450658541227588666881" +
                        "16427171479924442928230863465674813919123162824586" +
                        "17866458359124566529476545682848912883142607690042" +
                        "24219022671055626321111109370544217506941658960408" +
                        "07198403850962455444362981230987879927244284909188" +
                        "84580156166097919133875499200524063689912560717606" +
                        "05886116467109405077541002256983155200055935729725" +
                        "71636269561882670428252483600823257530420752963450" ;

        String slice;

        for (int iSlice = 0; iSlice < bigNum.length() - lenNum; iSlice++) {
            slice = bigNum.substring(iSlice, iSlice + lenNum);
            mulResult = 1;

            for (int iS = 0; iS < slice.length(); iS++) {
                intArray[iS] = Character.getNumericValue(slice.charAt(iS));
                mulResult *= intArray[iS];
            }

            if (mulResult > mulResultMax) {
                mulResultMax = mulResult;
                intArrayMax  = intArray;
            }
        }

        t2 = Instant.now();

        TIME = Duration.between(t1, t2).toMillis();

        System.out.println("RESULT    -- " + mulResultMax);
        System.out.print("SLICE     -- ");
        for (int elem : intArrayMax) System.out.print(elem + "");
        System.out.println();
        System.out.println("TIME (MS) -- " + TIME);
    }
}
